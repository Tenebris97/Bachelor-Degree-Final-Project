
@model ReflectionIT.Mvc.Paging.PagingList<FinalProject.Models.ViewModels.ProductListViewModel>
@using ReflectionIT.Mvc.Paging;

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, FinalProject

@{
    ViewData["Title"] = "تمام محصولات";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section basket{
    @Html.Partial("_Basket")
}

<h1 class="text-center text-info">@ViewBag.ViewTitle</h1>
<hr />

<div class="row">
    <div class="col-md-12">
        <div class="card-deck">
            @foreach (var item in Model)
            {
                var finalPrice = item.ProductPrice - item.ProductDiscount;
                var pricePercent = 0.0;

                if (item.ProductDiscount != 0)
                {
                    pricePercent = (Convert.ToDouble(item.ProductDiscount) * 100) / Convert.ToDouble(item.ProductPrice);

                }
                else
                {
                    pricePercent = 0;
                }
                <div class="col-md-3 col-sm-6 mb-4 ml-0 mr-0 p-0">                   
                    <div class="card blue-gradient waves-light mb-3 view overlay zoom" id="tv">
                        <a class="text-dark" asp-controller="Product" asp-action="Details" asp-route-id="@item.ProductId">
                            <img style="height: 300px; width: 100%;" src="@ViewBag.RootPath@item.ProductImage" class="img-fluid">
                            <div class="card-header text-dark">
                                <p class="mt-2" style="font-size: 14px !important;">@item.ProductName</p>                          
                            </div>
                            <div style="height: 60px !important; min-height: 60px !important; border-top: 2px solid #fffdd0;">
                                @if (item.ProductDiscount == 0)
                                {
                                    <div class="row text-center justify-content-center" style="max-height:36px !important; margin-top: 12px !important;">
                                        <span class="text-dark" style="font-size: 20px;">@string.Format("{0:n0}", item.ProductPrice)  تومان</span>
                                    </div>
                                }
                                else
                                {
                                    <div class="row text-center justify-content-center">
                                        <span>
                                            <span style="text-decoration: line-through; font-size: 14px !important;">
                                                @string.Format("{0:n0}", item.ProductPrice)
                                            </span>
                                            <span class="text-dark">&nbsp; - &nbsp;</span>
                                            <span class="badge badge-danger" style="font-size: 14px !important;">
                                                @Math.Round(pricePercent) ٪ تخفیف
                                            </span>
                                        </span>
                                    </div>
                                    <div class="row text-center justify-content-center">
                                        <span class="text-dark" style="font-size: 20px;">@string.Format("{0:n0}", finalPrice) تومان</span>
                                    </div>
                                }
                            </div>
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


<div class="row justify-content-center text-center ">
    <nav class="text-center">
        @await this.Component.InvokeAsync("Pager", new { PagingList = this.Model })
    </nav>
</div>
